--- a/cores/esp8266/Updater.cpp
+++ b/cores/esp8266/Updater.cpp
@@ -25,6 +25,7 @@ extern "C" {
 }
 
 extern "C" uint32_t _SPIFFS_start;
+extern "C" uint32_t _SPIFFS_end;
 
 UpdaterClass::UpdaterClass()
 : _async(false)
@@ -131,7 +132,14 @@ bool UpdaterClass::begin(size_t size, int command, int ledPin, uint8_t ledOn) {
     }
   }
   else if (command == U_SPIFFS) {
-     updateStartAddress = (uintptr_t)&_SPIFFS_start - 0x40200000;
+    uintptr_t updateEndAddress = (uintptr_t)&_SPIFFS_start - 0x40200000;
+    size_t roundedSize = (size + FLASH_SECTOR_SIZE - 1) & (~(FLASH_SECTOR_SIZE - 1));
+    updateStartAddress = (updateEndAddress > roundedSize)? (updateEndAddress - roundedSize) : 0;
+
+    if((uintptr_t)&_SPIFFS_start + roundedSize > (uintptr_t)&_SPIFFS_end) {
+      _setError(UPDATE_ERROR_SPACE);
+      return false;
+    }
   }
   else {
     // unknown command
@@ -278,8 +286,17 @@ bool UpdaterClass::end(bool evenIfRemaining){
 
 #ifdef DEBUG_UPDATER
     DEBUG_UPDATER.printf_P(PSTR("Staged: address:0x%08X, size:0x%08zX\n"), _startAddress, _size);
+#endif
   }
   else if (_command == U_SPIFFS) {
+    eboot_command ebcmd;
+    ebcmd.action = ACTION_COPY_RAW;
+    ebcmd.args[0] = _startAddress;
+    ebcmd.args[1] = (uintptr_t)&_SPIFFS_start - 0x40200000;
+    ebcmd.args[2] = _size;
+    eboot_command_write(&ebcmd);
+
+#ifdef DEBUG_UPDATER
     DEBUG_UPDATER.printf_P(PSTR("SPIFFS: address:0x%08X, size:0x%08zX\n"), _startAddress, _size);
 #endif
   }
